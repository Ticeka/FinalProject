@page
@model FinalProject.Pages.IndexModel
@{
    ViewData["Title"] = "Sip & Trip — แผนที่เครื่องดื่มท้องถิ่นไทย";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/index.css" />

<!-- MarkerCluster -->
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.Default.css" />

<header class="page-hero rounded-4 mb-4 p-4 p-md-5">
    <div class="container">
        <div class="d-flex flex-column flex-md-row align-items-md-end gap-3 justify-content-between">
            <div>
                <h1 class="display-6 fw-bold mb-1">🍹 Sip &amp; Trip — แผนที่เครื่องดื่มท้องถิ่นไทย</h1>
                <p class="mb-0 text-hero-sub">สำรวจคราฟต์เบียร์ • ไวน์ • สุราทั่วไทย ค้นหาไวด้วยตัวกรอง พร้อมรายการผลลัพธ์แบบโต้ตอบ</p>
            </div>
            <div class="text-md-end d-flex align-items-center gap-2">
                <span class="badge rounded-pill bg-dark-subtle text-dark px-3 py-2">
                    ทั้งหมด <span id="totalCount">0</span> รายการ
                </span>
                <button id="shareBtn" class="btn btn-outline-secondary btn-sm">🔗 คัดลอกลิงก์ค้นหา</button>
            </div>
        </div>
    </div>
</header>

<div class="container">
    <div class="row g-4">
        <!-- Filters -->
        <div class="col-lg-4 col-xl-3">
            <div class="filter-panel card border-0 shadow-sm sticky-top" style="top: 24px;">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <h5 class="mb-0 fw-semibold">ตัวกรองค้นหา</h5>
                        <button id="resetBtn" class="btn btn-sm btn-outline-secondary">รีเซ็ต</button>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">ค้นหาชื่อร้าน/เครื่องดื่ม</label>
                        <input type="text" id="searchText" class="form-control" placeholder="เช่น สิงห์, Phuket, IPA" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">จังหวัด</label>
                        <select id="provinceSelect" class="form-select">
                            <option value="">-- ทั้งหมด --</option>
                            @foreach (var province in Model.LocalBeers.Select(b => b.Province).Where(p => !string.IsNullOrEmpty(p)).Distinct())
                            {
                                <option>@province</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">ประเภท</label>
                        <select id="typeSelect" class="form-select">
                            <option value="">-- ทั้งหมด --</option>
                            @foreach (var type in Model.LocalBeers.Select(b => b.Type).Where(t => !string.IsNullOrEmpty(t)).Distinct())
                            {
                                <option>@type</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">ดีกรีขั้นต่ำ (ABV %)</label>
                        <input type="number" id="minAbv" class="form-control" placeholder="เช่น 4.5">
                    </div>

                    <div class="row g-2">
                        <div class="col-6 d-grid">
                            <button class="btn btn-primary" id="searchBtn">ค้นหา</button>
                        </div>
                        <div class="col-6 d-grid">
                            <button class="btn btn-light border" id="locateBtn">ตำแหน่งฉัน</button>
                        </div>
                    </div>

                    <hr class="my-3" />

                    <!-- Quick chips -->
                    <div class="d-flex flex-wrap gap-2">
                        <button class="chip-btn" data-type="เบียร์">🍺 เบียร์</button>
                        <button class="chip-btn" data-type="ไวน์">🍷 ไวน์</button>
                        <button class="chip-btn" data-type="เหล้า">🥃 เหล้า/สุรา</button>
                        <button class="chip-btn active" data-type="">ทั้งหมด</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Map & Side List -->
        <div class="col-lg-8 col-xl-9">
            <div class="map-wrap rounded-4 shadow-sm overflow-hidden position-relative mb-3">
                <div id="map"></div>
                <div class="map-legend card border-0 shadow-sm p-2 p-md-3">
                    <div class="small text-muted mb-1">คลิกหมุดเพื่อดูรายละเอียด • ลาก/ซูมเพื่อสำรวจ • โฮเวอร์รายการเพื่อกระพริบหมุด</div>
                    <div class="d-flex gap-2 align-items-center">
                        <span class="poi-pin poi-beer">🍺</span><span class="small me-2">เบียร์</span>
                        <span class="poi-pin poi-wine">🍷</span><span class="small me-2">ไวน์</span>
                        <span class="poi-pin poi-liquor">🥃</span><span class="small">เหล้า/สุรา</span>
                    </div>
                </div>
            </div>

            <!-- Side results list -->
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h6 class="mb-0">ผลลัพธ์</h6>
                        <small class="text-muted">คลิกเพื่อโฟกัสหมุด • Enter เพื่อดูรายละเอียด</small>
                    </div>
                    <ul id="resultList" class="list-group list-group-flush small"></ul>
                    <div class="d-grid mt-3">
                        <button id="loadMoreBtn" class="btn btn-outline-primary d-none">ดูเพิ่ม</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.markercluster@1.5.3/dist/leaflet.markercluster.js"></script>
<script>
    // ====== Data ======
    const locations = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LocalBeers));

    // ====== Map Setup ======
    const map = L.map('map', { scrollWheelZoom: true, worldCopyJump: true }).setView([15.8700, 100.9925], 6);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '© OpenStreetMap contributors' }).addTo(map);

    // Cluster group
    const markerCluster = L.markerClusterGroup({ showCoverageOnHover: false, spiderfyOnMaxZoom: true });
    map.addLayer(markerCluster);

    // ====== Emoji Pins ======
    function getEmojiByType(type){
      const t = (type||'').toLowerCase();
      if (t.includes('ไวน์') || t.includes('wine')) return { emoji:'🍷', cls:'poi-wine' };
      if (t.includes('เบียร์') || t.includes('beer') || t.includes('ลาเกอร์') || t.includes('ipa')) return { emoji:'🍺', cls:'poi-beer' };
      if (t.includes('วิสกี้') || t.includes('เหล้า') || t.includes('rum') || t.includes('whisky') || t.includes('liquor')) return { emoji:'🥃', cls:'poi-liquor' };
      return { emoji:'🍶', cls:'poi-default' };
    }
    function createEmojiIcon(type){
      const {emoji, cls} = getEmojiByType(type);
      return L.divIcon({
        html: `<div class="poi-pin ${cls}">${emoji}</div>`,
        className: '', iconSize: [32,32], iconAnchor: [16,16], popupAnchor: [0,-14]
      });
    }

    // ====== UI Elements ======
    const $search = document.getElementById('searchText');
    const $province = document.getElementById('provinceSelect');
    const $type = document.getElementById('typeSelect');
    const $minAbv = document.getElementById('minAbv');
    const $total = document.getElementById('totalCount');
    const $reset = document.getElementById('resetBtn');
    const $searchBtn = document.getElementById('searchBtn');
    const $locateBtn = document.getElementById('locateBtn');
    const $chips = document.querySelectorAll('.chip-btn');
    const $resultList = document.getElementById('resultList');
    const $loadMore = document.getElementById('loadMoreBtn');
    const $shareBtn = document.getElementById('shareBtn');

    const formatPrice = p => (p == null ? '–' : new Intl.NumberFormat('th-TH',{style:'currency',currency:'THB',maximumFractionDigits:0}).format(p));
    const starRating = r => r == null ? '<span class="text-muted">–</span>' : '★'.repeat(Math.round(r)) + '☆'.repeat(5-Math.round(r)) + ` <span class="text-muted">(${r.toFixed(1)})</span>`;
    const debounce = (fn, wait = 300) => { let t; return (...a)=>{ clearTimeout(t); t=setTimeout(()=>fn(...a), wait); }; };

    // ====== Renderers ======
    let idToMarker = new Map(); // sync list <-> marker
    function buildPopup(loc) {
      const alc = loc.AlcoholLevel != null ? `${loc.AlcoholLevel}%` : '–';
      return `
        <div class="popup">
          <div class="popup-header">${loc.Name ?? 'ไม่ทราบชื่อ'}</div>
          <div class="small text-muted mb-2">${loc.Type ?? '-'} • ${loc.Province ?? '-'}</div>
          <div class="mb-2">${loc.Description ?? ''}</div>
          <div class="d-flex flex-wrap gap-2 mb-2">
            <span class="chip">แอลกอฮอล์: <strong>${alc}</strong></span>
            <span class="chip">ราคา: <strong>${formatPrice(loc.Price)}</strong></span>
          </div>
          <div class="mb-2">คะแนน: ${starRating(loc.Rating)} <span class="text-muted">${loc.RatingCount ? loc.RatingCount + ' รีวิว':''}</span></div>
          <div class="d-grid"><a href="/Detail?id=${loc.Id}" class="btn btn-sm btn-outline-primary">ดูรายละเอียด</a></div>
        </div>`;
    }

    function renderMarkers(data) {
      markerCluster.clearLayers();
      idToMarker.clear();
      const group = [];

      data.forEach(loc => {
        if (loc.Latitude == null || loc.Longitude == null) return;
        if (loc.Latitude === 0 && loc.Longitude === 0) return; // กันพิกัด 0,0
        const marker = L.marker([loc.Latitude, loc.Longitude], { icon: createEmojiIcon(loc.Type) })
          .bindPopup(buildPopup(loc))
          .bindTooltip(loc.Name || '', {direction:'top'});
        markerCluster.addLayer(marker);
        idToMarker.set(loc.Id, marker);
        group.push(marker);
      });

      if (group.length) {
        if (group.length === 1) {
          map.setView(group[0].getLatLng(), 13);
        } else {
          const g = L.featureGroup(group);
          map.fitBounds(g.getBounds().pad(0.2));
        }
      }
      $total.textContent = data.length.toString();
    }

    // ====== Side List ======
    const pageSize = 12;
    let filtered = [];
    function renderListPage(items, start=0){
      const slice = items.slice(start, start + pageSize);
      if (start === 0) $resultList.innerHTML = '';
      slice.forEach(loc => {
        const { emoji } = getEmojiByType(loc.Type);
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex align-items-center gap-3 list-row';
        li.tabIndex = 0;
        li.dataset.id = loc.Id;

        li.innerHTML = `
          <div class="poi-pin poi-mini">${emoji}</div>
          <div class="flex-grow-1">
            <div class="fw-semibold">${loc.Name ?? '-'}</div>
            <div class="text-muted">${loc.Type ?? '-'} • ${loc.Province ?? '-'}</div>
          </div>
          <div class="text-end small">
            <div class="text-muted">${loc.AlcoholLevel != null ? loc.AlcoholLevel + '%' : '–'}</div>
            <div class="fw-semibold">${formatPrice(loc.Price)}</div>
          </div>
        `;

        // hover -> pulse marker
        li.addEventListener('mouseenter', ()=>{
          const m = idToMarker.get(loc.Id);
          if (!m) return;
          const el = m._icon?.firstChild;
          if (el){ el.classList.add('pulse'); setTimeout(()=>el.classList.remove('pulse'), 600); }
        });

        // click -> fly & open popup
        li.addEventListener('click', ()=>{
          const m = idToMarker.get(loc.Id);
          if (!m) return;
          map.flyTo(m.getLatLng(), 14, { duration: .5 });
          m.openPopup();
        });

        // Enter -> go detail
        li.addEventListener('keydown', (e)=>{
          if (e.key === 'Enter'){ window.location.href = `/Detail?id=${loc.Id}`; }
        });

        $resultList.appendChild(li);
      });

      // toggle load more
      if (items.length > start + pageSize) {
        $loadMore.classList.remove('d-none');
        $loadMore.onclick = ()=> renderListPage(items, start + pageSize);
      } else {
        $loadMore.classList.add('d-none');
        $loadMore.onclick = null;
      }
    }

    // ====== Filtering ======
    function getFilter() {
      const keyword = ($search.value || '').trim().toLowerCase();
      const province = $province.value;
      const type = $type.value;
      const minAbv = parseFloat($minAbv.value);
      return { keyword, province, type, minAbv: isNaN(minAbv) ? -Infinity : minAbv };
    }

    function doFilter() {
      const { keyword, province, type, minAbv } = getFilter();

      const out = locations.filter(loc => {
        const name = (loc.Name || '').toLowerCase();
        const desc = (loc.Description || '').toLowerCase();
        const matchText = !keyword || name.includes(keyword) || desc.includes(keyword);
        const matchProvince = !province || loc.Province === province;
        const matchType = !type
          || (loc.Type || '') === type
          || (type === 'เหล้า' && /(วิสกี้|เหล้า|rum|whisky|liquor)/i.test(loc.Type || ''));
        const matchAbv = (loc.AlcoholLevel ?? 0) >= minAbv;
        return matchText && matchProvince && matchType && matchAbv;
      });

      filtered = out;
      renderMarkers(out);
      renderListPage(out, 0);

      if (out.length === 0) showToast('ไม่พบผลลัพธ์ ลองเปลี่ยนคำค้นหาหรือปรับตัวกรอง');
      updateShareUrl();
    }

    function resetFilters() {
      $search.value = '';
      $province.value = '';
      $type.value = '';
      $minAbv.value = '';
      filtered = locations.slice();
      renderMarkers(filtered);
      renderListPage(filtered, 0);
      updateShareUrl();
      document.querySelectorAll('.chip-btn').forEach(b=>b.classList.remove('active'));
      document.querySelector('.chip-btn[data-type=""]')?.classList.add('active');
    }

    // ====== Geolocate ======
    function locateMe() {
      if (!navigator.geolocation) return showToast('เบราว์เซอร์ไม่รองรับการระบุตำแหน่ง');
      navigator.geolocation.getCurrentPosition((pos) => {
        const { latitude, longitude } = pos.coords;
        map.flyTo([latitude, longitude], 12, { duration: 0.8 });
        L.circle([latitude, longitude], { radius: 400, color: '#0d6efd' }).addTo(map);
      }, () => showToast('ไม่สามารถอ่านตำแหน่งได้'));
    }

    // ====== Toast ======
    let toastTimer;
    function showToast(msg) {
      clearTimeout(toastTimer);
      const el = document.getElementById('toast');
      el.textContent = msg;
      el.classList.add('show');
      toastTimer = setTimeout(() => el.classList.remove('show'), 2200);
    }

    // ====== Quick chips (with active state) ======
    document.querySelectorAll('.chip-btn').forEach(btn=>{
      btn.addEventListener('click', ()=>{
        document.querySelectorAll('.chip-btn').forEach(b=>b.classList.remove('active'));
        btn.classList.add('active');
        $type.value = btn.dataset.type || '';
        doFilter();
      });
    });

    // ====== Shareable URL ======
    function updateShareUrl(){
      const params = new URLSearchParams();
      if ($search.value)  params.set('q', $search.value);
      if ($province.value) params.set('prov', $province.value);
      if ($type.value)    params.set('type', $type.value);
      if ($minAbv.value)  params.set('minAbv', $minAbv.value);
      const qs = params.toString();
      const url = qs ? `${location.pathname}?${qs}` : location.pathname;
      $shareBtn.dataset.url = url;
    }
    $shareBtn.addEventListener('click', async ()=>{
      const url = $shareBtn.dataset.url || location.href;
      try { await navigator.clipboard.writeText(location.origin + ($shareBtn.dataset.url || '')); showToast('คัดลอกลิงก์แล้ว!'); }
      catch { showToast('คัดลอกไม่สำเร็จ'); }
    });

    // ====== Events ======
    const deb = (fn)=>debounce(fn,250);
    $search.addEventListener('input', deb(doFilter));
    $province.addEventListener('change', doFilter);
    $type.addEventListener('change', doFilter);
    $minAbv.addEventListener('input', deb(doFilter));
    $searchBtn.addEventListener('click', doFilter);
    $reset.addEventListener('click', resetFilters);
    $locateBtn.addEventListener('click', locateMe);
    $search.addEventListener('keydown', (e) => { if (e.key === 'Enter') doFilter(); });

    // ====== Init ======
    (function initFromQuery(){
      const qs = new URLSearchParams(location.search);
      if (qs.get('q')) $search.value = qs.get('q');
      if (qs.get('prov')) $province.value = qs.get('prov');
      if (qs.get('type')) { $type.value = qs.get('type'); document.querySelectorAll('.chip-btn').forEach(b=>b.classList.toggle('active', b.dataset.type===qs.get('type'))); }
      if (qs.get('minAbv')) $minAbv.value = qs.get('minAbv');
    })();
    filtered = locations.slice();
    renderMarkers(filtered);
    renderListPage(filtered, 0);
    updateShareUrl();
</script>

<!-- Tiny toast element -->
<div id="toast" class="toast-lite"></div>

<style>
    :root {
        --bg: #f6f8fb;
        --card: #ffffff;
        --ink: #243447;
        --muted: #6b7b8c;
        --brand: #2563eb;
        --brand-600: #1f51bf;
        --ring: rgba(37,99,235,.2);
    }

    body {
        background: var(--bg);
        font-family: 'Inter',system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;
        color: var(--ink);
    }

    .page-hero {
        background: radial-gradient(1200px 400px at 20% -10%, #dbeafe, transparent), linear-gradient(180deg, #eff6ff, #ffffff);
        border: 1px solid #e6ebf2;
    }

    .text-hero-sub {
        color: var(--muted);
    }

    .filter-panel .form-control, .filter-panel .form-select {
        border-radius: 10px;
        border: 1px solid #d7deea;
        box-shadow: none;
        transition: border-color .2s, box-shadow .2s;
    }

        .filter-panel .form-control:focus, .filter-panel .form-select:focus {
            border-color: var(--brand);
            box-shadow: 0 0 0 3px var(--ring);
        }

    .filter-panel .btn-primary {
        background: var(--brand);
        border-color: var(--brand);
        font-weight: 600;
    }

        .filter-panel .btn-primary:hover {
            background: var(--brand-600);
            border-color: var(--brand-600);
        }

    .chip-btn {
        border: 1px solid #e2e8f0;
        background: #f8fafc;
        border-radius: 999px;
        padding: 6px 10px;
        font-size: .85rem;
        cursor: pointer;
    }

        .chip-btn.active {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

    /* Map */
    .map-wrap {
        background: var(--card);
        border: 1px solid #e6ebf2;
    }

    #map {
        height: 650px;
        width: 100%;
    }

    .map-legend {
        position: absolute;
        left: 12px;
        bottom: 12px;
        background: #fff;
        border-radius: 12px;
    }

    /* Popup */
    .leaflet-popup-content {
        margin: 8px 12px;
    }

    .popup-header {
        font-weight: 700;
        color: var(--ink);
    }

    .chip {
        background: #f1f5f9;
        border: 1px solid #e2e8f0;
        color: #0f172a;
        border-radius: 999px;
        padding: 4px 10px;
        font-size: 12px;
    }

    /* Toast */
    .toast-lite {
        position: fixed;
        left: 50%;
        bottom: 24px;
        transform: translateX(-50%);
        background: #111827;
        color: #fff;
        padding: 10px 14px;
        border-radius: 999px;
        opacity: 0;
        pointer-events: none;
        transition: opacity .25s ease;
        font-size: 14px;
        z-index: 9999;
    }

        .toast-lite.show {
            opacity: .98;
        }

    /* Emoji Pins */
    .poi-pin {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        border: 1px solid rgba(0,0,0,.15);
        box-shadow: 0 2px 6px rgba(0,0,0,.15);
        font-size: 18px;
        background: #fff;
        transition: transform .15s ease;
    }

    .poi-mini {
        width: 28px;
        height: 28px;
        font-size: 16px;
    }

    .poi-beer {
        background: #fff7e6;
    }

    .poi-wine {
        background: #fde2e4;
    }

    .poi-liquor {
        background: #e6f4ff;
    }

    .poi-default {
        background: #eef2f7;
    }

    .leaflet-div-icon {
        background: transparent;
        border: none;
    }

    .pulse {
        animation: pulse .6s ease;
    }
    @@keyframes pulse {
        0%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.15);
    }

    100% {
        transform: scale(1);
    }

    }

    /* Responsive เล็กน้อย */
    @@media (max-width: 576px) {
        .poi-pin {
            width: 28px;
            height: 28px;
            font-size: 16px;
        }
    }
</style>
